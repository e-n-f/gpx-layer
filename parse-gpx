#!/usr/bin/perl

use POSIX;
use XML::Parser;

$ENV{'TZ'} = "GMT";

sub acos {
	if ($_[0] * $_[0] > 1) {
		return 0;
	}

	return atan2(sqrt(1 - $_[0] * $_[0]), $_[0]);
}

$pi = 4 * atan2(1, 1);
$r = 6367 / 1.609344;
$foot = 180 / $r / 5280 / $pi;

# http://www.movable-type.co.uk/scripts/gis-faq-5.1.html
# nautical mile definition requires 6367 km radius for the earth
# exactly 1.609344 miles per kilometer, .621371192 kilometers per mile
# so r is radius of earth in miles, $foot is one foot in degrees

sub dist {
	my $lat1 = $_[0] * $pi/180;
	my $lon1 = $_[1] * $pi/180;

	my $lat2 = $_[2] * $pi/180;
	my $lon2 = $_[3] * $pi/180;

	my $latd = $lat2 - $lat1;
	my $lond = ($lon2 - $lon1) * cos(($lat1 + $lat2) / 2);

	my $d = sqrt($latd * $latd + $lond * $lond) * 180 / $pi / $foot;
	if ($d >= 1000) {
		$d = acos(sin($lat1) * sin($lat2) + cos($lat1) * cos($lat2) * cos($lon2 - $lon1)) * $r * 5280;
	}

	return $d;
}

sub handle_start {
	my ($expat, $element, @tags) = @_;
	my %tags = @tags;

	if ($element eq "trkpt") {
		$lat = $tags{'lat'};
		$lon = $tags{'lon'};
	} elsif ($element eq "ele") {
		$state = "ele";
	} elsif ($element eq "time") {
		$state = "time";
	} else {
		$state = "";
	}
}

sub handle_char {
	my ($expat, $string) = @_;

	$text{$state} .= $string;
}

sub handle_end {
	my ($expat, $element) = @_;

	if ($element eq "trkseg" || $element eq "trk") {
		if ($oldwhen != 0) {
			print "$oldwhen --\n";
			$oldwhen = 0;
		}
	} elsif ($element eq "trkpt") {
		if ($text{'time'} =~ /(\d+)-(\d+)-(\d+)T(\d+):(\d+):(\d+)/) {
			($year, $month, $day, $hour, $minute, $second) = ($1, $2, $3, $4, $5, $6);
		} else {
			($year, $month, $day, $hour, $minute, $second) = (1970, 1, 1, 0, 0, 0);
		}

		$date = sprintf("%04d-%02d-%02d", $year, $month, $day);
		$time = sprintf("%02d:%02d:%02d", $hour, $minute, $second);

		if ($text{'ele'} ne "") {
			$ele = $text{'ele'};
		} else {
			$ele = 0;
		}

		$year -= 1900;
		$month -= 1;

		$when = POSIX::mktime($second, $minute, $hour, $day, $month, $year, 0, 0, -1);

		if ($oldwhen != 0) {
			if ($oldwhen < $when) {
				$sec = $when - $oldwhen;
				$dist = dist($oldlat, $oldlon, $lat, $lon);
				$speed = ($dist / 5280) / ($sec / 60 / 60);

				print "$oldwhen $oldlat,$oldlon to $lat,$lon $olddate $oldtime ";
				printf("%d ", $sec);
				printf("%.4f %.4f ", $dist, $speed);
				printf("%.2f %.2f ", $oldele, $ele);

				if ($dist != 0) {
					printf("%.4f%% G\n", 100 * ($ele - $oldele) * 3.2808399 / $dist);
				} else {
					printf("?%% G\n");
				}
			} else {
				print "$oldwhen --\n";
			}
		}

		$oldwhen = $when;
		$oldlat = $lat;
		$oldlon = $lon;
		$olddate = $date;
		$oldtime = $time;
		$oldele = $ele;

		%text = ();
	}
}

if ($#ARGV < 0) {
	$parser = new XML::Parser(Handlers => { Start => \&handle_start,
						End   => \&handle_end,
						Char  => \&handle_char,
					      });

	$parser->parse(*STDIN);
} else {
	for $file (@ARGV) {
		$oldwhen = 0;

		$parser = new XML::Parser(Handlers => { Start => \&handle_start,
							End   => \&handle_end,
							Char  => \&handle_char,
						      });

		$parser->parsefile($file);
	}
}
